// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: astroboy.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Astroboy {

  /// <summary>Holder for reflection information generated from astroboy.proto</summary>
  public static partial class AstroboyReflection {

    #region Descriptor
    /// <summary>File descriptor for astroboy.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AstroboyReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg5hc3Ryb2JveS5wcm90bxIIYXN0cm9ib3kihQEKA0xvZxIKCgJJRBgBIAEo",
            "CRIeCgVMZXZlbBgCIAEoDjIPLmFzdHJvYm95LkxldmVsEg8KB1Byb2plY3QY",
            "AyABKAkSDwoHU2VydmljZRgEIAEoCRIPCgdDb250ZXh0GAUgASgJEhIKCkNy",
            "ZWF0ZVRpbWUYBiABKAMSCwoDVGFnGAcgASgJIj8KCUFkZExvZ1JlcRIeCgdM",
            "b2dMaXN0GAEgAygLMg0uYXN0cm9ib3kuTG9nEhIKCklkZW1wb3RlbnQYAiAB",
            "KAMiKAoJQWRkTG9nUnNwEgwKBENvZGUYASABKAUSDQoFRXJyb3IYAiABKAki",
            "6QEKCUdldExvZ1JlcRIeCgVsZXZlbBgBIAEoDjIPLmFzdHJvYm95LkxldmVs",
            "Eg8KB1Byb2plY3QYAiABKAkSDwoHU2VydmljZRgDIAEoCRIPCgdDb250ZXh0",
            "GAQgASgJEhUKDUNyZWF0ZVRpbWVCZWcYBSABKAMSFQoNQ3JlYXRlVGltZUVu",
            "ZBgGIAEoAxILCgNUYWcYByABKAkSCwoDUG9zGAggASgDEg4KBk9mZnNldBgJ",
            "IAEoAxIPCgdPcmRlckJ5GAogASgJEgwKBERlc2MYCyABKAgSEgoKSWRlbXBv",
            "dGVudBgMIAEoAyJdCglHZXRMb2dSc3ASDAoEQ29kZRgBIAEoBRINCgVFcnJv",
            "chgCIAEoCRIfCghEYXRhTGlzdBgDIAMoCzINLmFzdHJvYm95LkxvZxISCgpU",
            "b3RhbENvdW50GAQgASgDKmQKBUxldmVsEg0KCUxldmVsTm9uZRAAEg4KCkxl",
            "dmVsRGVidWcQARINCglMZXZlbEluZm8QAhINCglMZXZlbFdhcm4QAxIOCgpM",
            "ZXZlbEVycm9yEAQSDgoKTGV2ZWxGYXRhbBAFQgVaAy9wYmIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Astroboy.Level), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Astroboy.Log), global::Astroboy.Log.Parser, new[]{ "ID", "Level", "Project", "Service", "Context", "CreateTime", "Tag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Astroboy.AddLogReq), global::Astroboy.AddLogReq.Parser, new[]{ "LogList", "Idempotent" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Astroboy.AddLogRsp), global::Astroboy.AddLogRsp.Parser, new[]{ "Code", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Astroboy.GetLogReq), global::Astroboy.GetLogReq.Parser, new[]{ "Level", "Project", "Service", "Context", "CreateTimeBeg", "CreateTimeEnd", "Tag", "Pos", "Offset", "OrderBy", "Desc", "Idempotent" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Astroboy.GetLogRsp), global::Astroboy.GetLogRsp.Parser, new[]{ "Code", "Error", "DataList", "TotalCount" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum Level {
    [pbr::OriginalName("LevelNone")] None = 0,
    [pbr::OriginalName("LevelDebug")] Debug = 1,
    [pbr::OriginalName("LevelInfo")] Info = 2,
    [pbr::OriginalName("LevelWarn")] Warn = 3,
    [pbr::OriginalName("LevelError")] Error = 4,
    [pbr::OriginalName("LevelFatal")] Fatal = 5,
  }

  #endregion

  #region Messages
  public sealed partial class Log : pb::IMessage<Log>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Log> _parser = new pb::MessageParser<Log>(() => new Log());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Log> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Astroboy.AstroboyReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Log() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Log(Log other) : this() {
      iD_ = other.iD_;
      level_ = other.level_;
      project_ = other.project_;
      service_ = other.service_;
      context_ = other.context_;
      createTime_ = other.createTime_;
      tag_ = other.tag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Log Clone() {
      return new Log(this);
    }

    /// <summary>Field number for the "ID" field.</summary>
    public const int IDFieldNumber = 1;
    private string iD_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ID {
      get { return iD_; }
      set {
        iD_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Level" field.</summary>
    public const int LevelFieldNumber = 2;
    private global::Astroboy.Level level_ = global::Astroboy.Level.None;
    /// <summary>
    /// 日志级别
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Astroboy.Level Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "Project" field.</summary>
    public const int ProjectFieldNumber = 3;
    private string project_ = "";
    /// <summary>
    /// 项目
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Project {
      get { return project_; }
      set {
        project_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Service" field.</summary>
    public const int ServiceFieldNumber = 4;
    private string service_ = "";
    /// <summary>
    /// 服务
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Service {
      get { return service_; }
      set {
        service_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Context" field.</summary>
    public const int ContextFieldNumber = 5;
    private string context_ = "";
    /// <summary>
    /// 内容
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Context {
      get { return context_; }
      set {
        context_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreateTime" field.</summary>
    public const int CreateTimeFieldNumber = 6;
    private long createTime_;
    /// <summary>
    /// 创建时间
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "Tag" field.</summary>
    public const int TagFieldNumber = 7;
    private string tag_ = "";
    /// <summary>
    /// 标枳, 自定义数据
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tag {
      get { return tag_; }
      set {
        tag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Log);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Log other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ID != other.ID) return false;
      if (Level != other.Level) return false;
      if (Project != other.Project) return false;
      if (Service != other.Service) return false;
      if (Context != other.Context) return false;
      if (CreateTime != other.CreateTime) return false;
      if (Tag != other.Tag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ID.Length != 0) hash ^= ID.GetHashCode();
      if (Level != global::Astroboy.Level.None) hash ^= Level.GetHashCode();
      if (Project.Length != 0) hash ^= Project.GetHashCode();
      if (Service.Length != 0) hash ^= Service.GetHashCode();
      if (Context.Length != 0) hash ^= Context.GetHashCode();
      if (CreateTime != 0L) hash ^= CreateTime.GetHashCode();
      if (Tag.Length != 0) hash ^= Tag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ID);
      }
      if (Level != global::Astroboy.Level.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Level);
      }
      if (Project.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Project);
      }
      if (Service.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Service);
      }
      if (Context.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Context);
      }
      if (CreateTime != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(CreateTime);
      }
      if (Tag.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Tag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ID.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ID);
      }
      if (Level != global::Astroboy.Level.None) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Level);
      }
      if (Project.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Project);
      }
      if (Service.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Service);
      }
      if (Context.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Context);
      }
      if (CreateTime != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(CreateTime);
      }
      if (Tag.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Tag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ID.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ID);
      }
      if (Level != global::Astroboy.Level.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Level);
      }
      if (Project.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Project);
      }
      if (Service.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Service);
      }
      if (Context.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Context);
      }
      if (CreateTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTime);
      }
      if (Tag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Log other) {
      if (other == null) {
        return;
      }
      if (other.ID.Length != 0) {
        ID = other.ID;
      }
      if (other.Level != global::Astroboy.Level.None) {
        Level = other.Level;
      }
      if (other.Project.Length != 0) {
        Project = other.Project;
      }
      if (other.Service.Length != 0) {
        Service = other.Service;
      }
      if (other.Context.Length != 0) {
        Context = other.Context;
      }
      if (other.CreateTime != 0L) {
        CreateTime = other.CreateTime;
      }
      if (other.Tag.Length != 0) {
        Tag = other.Tag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ID = input.ReadString();
            break;
          }
          case 16: {
            Level = (global::Astroboy.Level) input.ReadEnum();
            break;
          }
          case 26: {
            Project = input.ReadString();
            break;
          }
          case 34: {
            Service = input.ReadString();
            break;
          }
          case 42: {
            Context = input.ReadString();
            break;
          }
          case 48: {
            CreateTime = input.ReadInt64();
            break;
          }
          case 58: {
            Tag = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            ID = input.ReadString();
            break;
          }
          case 16: {
            Level = (global::Astroboy.Level) input.ReadEnum();
            break;
          }
          case 26: {
            Project = input.ReadString();
            break;
          }
          case 34: {
            Service = input.ReadString();
            break;
          }
          case 42: {
            Context = input.ReadString();
            break;
          }
          case 48: {
            CreateTime = input.ReadInt64();
            break;
          }
          case 58: {
            Tag = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AddLogReq : pb::IMessage<AddLogReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AddLogReq> _parser = new pb::MessageParser<AddLogReq>(() => new AddLogReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddLogReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Astroboy.AstroboyReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddLogReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddLogReq(AddLogReq other) : this() {
      logList_ = other.logList_.Clone();
      idempotent_ = other.idempotent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddLogReq Clone() {
      return new AddLogReq(this);
    }

    /// <summary>Field number for the "LogList" field.</summary>
    public const int LogListFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Astroboy.Log> _repeated_logList_codec
        = pb::FieldCodec.ForMessage(10, global::Astroboy.Log.Parser);
    private readonly pbc::RepeatedField<global::Astroboy.Log> logList_ = new pbc::RepeatedField<global::Astroboy.Log>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Astroboy.Log> LogList {
      get { return logList_; }
    }

    /// <summary>Field number for the "Idempotent" field.</summary>
    public const int IdempotentFieldNumber = 2;
    private long idempotent_;
    /// <summary>
    /// 幂等
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Idempotent {
      get { return idempotent_; }
      set {
        idempotent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddLogReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddLogReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!logList_.Equals(other.logList_)) return false;
      if (Idempotent != other.Idempotent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= logList_.GetHashCode();
      if (Idempotent != 0L) hash ^= Idempotent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      logList_.WriteTo(output, _repeated_logList_codec);
      if (Idempotent != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Idempotent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      logList_.WriteTo(ref output, _repeated_logList_codec);
      if (Idempotent != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Idempotent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += logList_.CalculateSize(_repeated_logList_codec);
      if (Idempotent != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Idempotent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddLogReq other) {
      if (other == null) {
        return;
      }
      logList_.Add(other.logList_);
      if (other.Idempotent != 0L) {
        Idempotent = other.Idempotent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            logList_.AddEntriesFrom(input, _repeated_logList_codec);
            break;
          }
          case 16: {
            Idempotent = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            logList_.AddEntriesFrom(ref input, _repeated_logList_codec);
            break;
          }
          case 16: {
            Idempotent = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AddLogRsp : pb::IMessage<AddLogRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AddLogRsp> _parser = new pb::MessageParser<AddLogRsp>(() => new AddLogRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddLogRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Astroboy.AstroboyReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddLogRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddLogRsp(AddLogRsp other) : this() {
      code_ = other.code_;
      error_ = other.error_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddLogRsp Clone() {
      return new AddLogRsp(this);
    }

    /// <summary>Field number for the "Code" field.</summary>
    public const int CodeFieldNumber = 1;
    private int code_;
    /// <summary>
    /// 1: 表示成功
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "Error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private string error_ = "";
    /// <summary>
    /// 错误信息
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddLogRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddLogRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Error != other.Error) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddLogRsp other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetLogReq : pb::IMessage<GetLogReq>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetLogReq> _parser = new pb::MessageParser<GetLogReq>(() => new GetLogReq());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetLogReq> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Astroboy.AstroboyReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLogReq() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLogReq(GetLogReq other) : this() {
      level_ = other.level_;
      project_ = other.project_;
      service_ = other.service_;
      context_ = other.context_;
      createTimeBeg_ = other.createTimeBeg_;
      createTimeEnd_ = other.createTimeEnd_;
      tag_ = other.tag_;
      pos_ = other.pos_;
      offset_ = other.offset_;
      orderBy_ = other.orderBy_;
      desc_ = other.desc_;
      idempotent_ = other.idempotent_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLogReq Clone() {
      return new GetLogReq(this);
    }

    /// <summary>Field number for the "level" field.</summary>
    public const int LevelFieldNumber = 1;
    private global::Astroboy.Level level_ = global::Astroboy.Level.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Astroboy.Level Level {
      get { return level_; }
      set {
        level_ = value;
      }
    }

    /// <summary>Field number for the "Project" field.</summary>
    public const int ProjectFieldNumber = 2;
    private string project_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Project {
      get { return project_; }
      set {
        project_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Service" field.</summary>
    public const int ServiceFieldNumber = 3;
    private string service_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Service {
      get { return service_; }
      set {
        service_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Context" field.</summary>
    public const int ContextFieldNumber = 4;
    private string context_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Context {
      get { return context_; }
      set {
        context_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "CreateTimeBeg" field.</summary>
    public const int CreateTimeBegFieldNumber = 5;
    private long createTimeBeg_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreateTimeBeg {
      get { return createTimeBeg_; }
      set {
        createTimeBeg_ = value;
      }
    }

    /// <summary>Field number for the "CreateTimeEnd" field.</summary>
    public const int CreateTimeEndFieldNumber = 6;
    private long createTimeEnd_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreateTimeEnd {
      get { return createTimeEnd_; }
      set {
        createTimeEnd_ = value;
      }
    }

    /// <summary>Field number for the "Tag" field.</summary>
    public const int TagFieldNumber = 7;
    private string tag_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tag {
      get { return tag_; }
      set {
        tag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Pos" field.</summary>
    public const int PosFieldNumber = 8;
    private long pos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Pos {
      get { return pos_; }
      set {
        pos_ = value;
      }
    }

    /// <summary>Field number for the "Offset" field.</summary>
    public const int OffsetFieldNumber = 9;
    private long offset_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Offset {
      get { return offset_; }
      set {
        offset_ = value;
      }
    }

    /// <summary>Field number for the "OrderBy" field.</summary>
    public const int OrderByFieldNumber = 10;
    private string orderBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "Desc" field.</summary>
    public const int DescFieldNumber = 11;
    private bool desc_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Desc {
      get { return desc_; }
      set {
        desc_ = value;
      }
    }

    /// <summary>Field number for the "Idempotent" field.</summary>
    public const int IdempotentFieldNumber = 12;
    private long idempotent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Idempotent {
      get { return idempotent_; }
      set {
        idempotent_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetLogReq);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetLogReq other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Level != other.Level) return false;
      if (Project != other.Project) return false;
      if (Service != other.Service) return false;
      if (Context != other.Context) return false;
      if (CreateTimeBeg != other.CreateTimeBeg) return false;
      if (CreateTimeEnd != other.CreateTimeEnd) return false;
      if (Tag != other.Tag) return false;
      if (Pos != other.Pos) return false;
      if (Offset != other.Offset) return false;
      if (OrderBy != other.OrderBy) return false;
      if (Desc != other.Desc) return false;
      if (Idempotent != other.Idempotent) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Level != global::Astroboy.Level.None) hash ^= Level.GetHashCode();
      if (Project.Length != 0) hash ^= Project.GetHashCode();
      if (Service.Length != 0) hash ^= Service.GetHashCode();
      if (Context.Length != 0) hash ^= Context.GetHashCode();
      if (CreateTimeBeg != 0L) hash ^= CreateTimeBeg.GetHashCode();
      if (CreateTimeEnd != 0L) hash ^= CreateTimeEnd.GetHashCode();
      if (Tag.Length != 0) hash ^= Tag.GetHashCode();
      if (Pos != 0L) hash ^= Pos.GetHashCode();
      if (Offset != 0L) hash ^= Offset.GetHashCode();
      if (OrderBy.Length != 0) hash ^= OrderBy.GetHashCode();
      if (Desc != false) hash ^= Desc.GetHashCode();
      if (Idempotent != 0L) hash ^= Idempotent.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Level != global::Astroboy.Level.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Level);
      }
      if (Project.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Project);
      }
      if (Service.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Service);
      }
      if (Context.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Context);
      }
      if (CreateTimeBeg != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(CreateTimeBeg);
      }
      if (CreateTimeEnd != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(CreateTimeEnd);
      }
      if (Tag.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Tag);
      }
      if (Pos != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(Pos);
      }
      if (Offset != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(Offset);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(OrderBy);
      }
      if (Desc != false) {
        output.WriteRawTag(88);
        output.WriteBool(Desc);
      }
      if (Idempotent != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(Idempotent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Level != global::Astroboy.Level.None) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Level);
      }
      if (Project.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Project);
      }
      if (Service.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Service);
      }
      if (Context.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Context);
      }
      if (CreateTimeBeg != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(CreateTimeBeg);
      }
      if (CreateTimeEnd != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(CreateTimeEnd);
      }
      if (Tag.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Tag);
      }
      if (Pos != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(Pos);
      }
      if (Offset != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(Offset);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(OrderBy);
      }
      if (Desc != false) {
        output.WriteRawTag(88);
        output.WriteBool(Desc);
      }
      if (Idempotent != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(Idempotent);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Level != global::Astroboy.Level.None) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Level);
      }
      if (Project.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Project);
      }
      if (Service.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Service);
      }
      if (Context.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Context);
      }
      if (CreateTimeBeg != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTimeBeg);
      }
      if (CreateTimeEnd != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTimeEnd);
      }
      if (Tag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tag);
      }
      if (Pos != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Pos);
      }
      if (Offset != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Offset);
      }
      if (OrderBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderBy);
      }
      if (Desc != false) {
        size += 1 + 1;
      }
      if (Idempotent != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Idempotent);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetLogReq other) {
      if (other == null) {
        return;
      }
      if (other.Level != global::Astroboy.Level.None) {
        Level = other.Level;
      }
      if (other.Project.Length != 0) {
        Project = other.Project;
      }
      if (other.Service.Length != 0) {
        Service = other.Service;
      }
      if (other.Context.Length != 0) {
        Context = other.Context;
      }
      if (other.CreateTimeBeg != 0L) {
        CreateTimeBeg = other.CreateTimeBeg;
      }
      if (other.CreateTimeEnd != 0L) {
        CreateTimeEnd = other.CreateTimeEnd;
      }
      if (other.Tag.Length != 0) {
        Tag = other.Tag;
      }
      if (other.Pos != 0L) {
        Pos = other.Pos;
      }
      if (other.Offset != 0L) {
        Offset = other.Offset;
      }
      if (other.OrderBy.Length != 0) {
        OrderBy = other.OrderBy;
      }
      if (other.Desc != false) {
        Desc = other.Desc;
      }
      if (other.Idempotent != 0L) {
        Idempotent = other.Idempotent;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Level = (global::Astroboy.Level) input.ReadEnum();
            break;
          }
          case 18: {
            Project = input.ReadString();
            break;
          }
          case 26: {
            Service = input.ReadString();
            break;
          }
          case 34: {
            Context = input.ReadString();
            break;
          }
          case 40: {
            CreateTimeBeg = input.ReadInt64();
            break;
          }
          case 48: {
            CreateTimeEnd = input.ReadInt64();
            break;
          }
          case 58: {
            Tag = input.ReadString();
            break;
          }
          case 64: {
            Pos = input.ReadInt64();
            break;
          }
          case 72: {
            Offset = input.ReadInt64();
            break;
          }
          case 82: {
            OrderBy = input.ReadString();
            break;
          }
          case 88: {
            Desc = input.ReadBool();
            break;
          }
          case 96: {
            Idempotent = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Level = (global::Astroboy.Level) input.ReadEnum();
            break;
          }
          case 18: {
            Project = input.ReadString();
            break;
          }
          case 26: {
            Service = input.ReadString();
            break;
          }
          case 34: {
            Context = input.ReadString();
            break;
          }
          case 40: {
            CreateTimeBeg = input.ReadInt64();
            break;
          }
          case 48: {
            CreateTimeEnd = input.ReadInt64();
            break;
          }
          case 58: {
            Tag = input.ReadString();
            break;
          }
          case 64: {
            Pos = input.ReadInt64();
            break;
          }
          case 72: {
            Offset = input.ReadInt64();
            break;
          }
          case 82: {
            OrderBy = input.ReadString();
            break;
          }
          case 88: {
            Desc = input.ReadBool();
            break;
          }
          case 96: {
            Idempotent = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GetLogRsp : pb::IMessage<GetLogRsp>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GetLogRsp> _parser = new pb::MessageParser<GetLogRsp>(() => new GetLogRsp());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetLogRsp> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Astroboy.AstroboyReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLogRsp() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLogRsp(GetLogRsp other) : this() {
      code_ = other.code_;
      error_ = other.error_;
      dataList_ = other.dataList_.Clone();
      totalCount_ = other.totalCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLogRsp Clone() {
      return new GetLogRsp(this);
    }

    /// <summary>Field number for the "Code" field.</summary>
    public const int CodeFieldNumber = 1;
    private int code_;
    /// <summary>
    /// 1: 表示成功
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Code {
      get { return code_; }
      set {
        code_ = value;
      }
    }

    /// <summary>Field number for the "Error" field.</summary>
    public const int ErrorFieldNumber = 2;
    private string error_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Error {
      get { return error_; }
      set {
        error_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "DataList" field.</summary>
    public const int DataListFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Astroboy.Log> _repeated_dataList_codec
        = pb::FieldCodec.ForMessage(26, global::Astroboy.Log.Parser);
    private readonly pbc::RepeatedField<global::Astroboy.Log> dataList_ = new pbc::RepeatedField<global::Astroboy.Log>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Astroboy.Log> DataList {
      get { return dataList_; }
    }

    /// <summary>Field number for the "TotalCount" field.</summary>
    public const int TotalCountFieldNumber = 4;
    private long totalCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalCount {
      get { return totalCount_; }
      set {
        totalCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetLogRsp);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetLogRsp other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Code != other.Code) return false;
      if (Error != other.Error) return false;
      if(!dataList_.Equals(other.dataList_)) return false;
      if (TotalCount != other.TotalCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Code != 0) hash ^= Code.GetHashCode();
      if (Error.Length != 0) hash ^= Error.GetHashCode();
      hash ^= dataList_.GetHashCode();
      if (TotalCount != 0L) hash ^= TotalCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      dataList_.WriteTo(output, _repeated_dataList_codec);
      if (TotalCount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Code != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Code);
      }
      if (Error.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Error);
      }
      dataList_.WriteTo(ref output, _repeated_dataList_codec);
      if (TotalCount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(TotalCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Code != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Code);
      }
      if (Error.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Error);
      }
      size += dataList_.CalculateSize(_repeated_dataList_codec);
      if (TotalCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetLogRsp other) {
      if (other == null) {
        return;
      }
      if (other.Code != 0) {
        Code = other.Code;
      }
      if (other.Error.Length != 0) {
        Error = other.Error;
      }
      dataList_.Add(other.dataList_);
      if (other.TotalCount != 0L) {
        TotalCount = other.TotalCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
          case 26: {
            dataList_.AddEntriesFrom(input, _repeated_dataList_codec);
            break;
          }
          case 32: {
            TotalCount = input.ReadInt64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Code = input.ReadInt32();
            break;
          }
          case 18: {
            Error = input.ReadString();
            break;
          }
          case 26: {
            dataList_.AddEntriesFrom(ref input, _repeated_dataList_codec);
            break;
          }
          case 32: {
            TotalCount = input.ReadInt64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
